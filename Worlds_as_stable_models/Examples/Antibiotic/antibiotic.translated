fluent(bacteria). possVal(bacteria, present). possVal(bacteria, resistant). possVal(bacteria, absent). 
fluent(rash). possVal(rash, visible). possVal(rash, invisible). 
belongsTo((rash,invisible), id0).
belongsTo((bacteria,present), id0).
initialCondition( (id0, frac(1,10)) ).

belongsTo((rash,visible), id1).
belongsTo((bacteria,present), id1).
initialCondition( (id1, frac(9,10)) ).

belongsTo((bacteria,resistant), id2).
causesOutcome( (id2, frac(1,10)), I) :-
	world( ((bacteria,present),I) ),
	world( ((takesMedicine,true),I) ).

belongsTo((rash,invisible), id3).
belongsTo((bacteria,resistant), id3).
causesOutcome( (id3, frac(2,10)), I) :-
	world( ((bacteria,present),I) ),
	world( ((takesMedicine,true),I) ).

belongsTo((rash,invisible), id4).
belongsTo((bacteria,absent), id4).
causesOutcome( (id4, frac(7,10)), I) :-
	world( ((bacteria,present),I) ),
	world( ((takesMedicine,true),I) ).

causesOutcome( (id5, frac(4,13)), I) :-
	world( ((bacteria,resistant),I) ),
	world( ((takesMedicine,true),I) ).

belongsTo((rash,invisible), id6).
causesOutcome( (id6, frac(8,13)), I) :-
	world( ((bacteria,resistant),I) ),
	world( ((takesMedicine,true),I) ).

belongsTo((rash,invisible), id7).
belongsTo((bacteria,absent), id7).
causesOutcome( (id7, frac(1,13)), I) :-
	world( ((bacteria,resistant),I) ),
	world( ((takesMedicine,true),I) ).

performed(takesMedicine, 40000).

#const maxinstant=40001.
